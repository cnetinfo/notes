{"version":3,"sources":["../src/node/cli.ts","../src/node/server/index.ts","../src/node/optimizer/index.ts","../src/node/constants.ts","../src/node/optimizer/scanPlugin.ts","../src/node/optimizer/preBundlePlugin.ts","../src/node/utils.ts"],"sourcesContent":["import cac from \"cac\"\r\nimport { startDevServer } from \"./server\"\r\n\r\nconst cli = cac()\r\n\r\ncli\r\n  .command(\"[root]\", \"Run the development server\")\r\n  .alias(\"serve\")\r\n  .alias(\"dev\")\r\n  .action(async () => {\r\n    await startDevServer()\r\n  })\r\n\r\ncli.help()\r\n\r\ncli.parse()\r\n","import connect from \"connect\"\r\nimport { blue, green } from \"picocolors\"\r\n\r\nimport { optimize } from '../optimizer'\r\n\r\nexport async function startDevServer() {\r\n  const app = connect()\r\n  const root = process.cwd()\r\n  const startTime = Date.now()\r\n\r\n  app.listen(3000, async () => {\r\n    await optimize(root)\r\n\r\n    console.log(\r\n      green(\"üöÄ No-Bundle ÊúçÂä°Â∑≤ÁªèÊàêÂäüÂêØÂä®!\"),\r\n      `ËÄóÊó∂: ${Date.now() - startTime}ms`\r\n    )\r\n    console.log(`> Êú¨Âú∞ËÆøÈóÆË∑ØÂæÑ: ${blue(\"http://localhost:3000\")}`)\r\n  })\r\n}\r\n","import path from 'path'\r\nimport { build } from \"esbuild\";\r\nimport { green } from 'picocolors'\r\nimport { scanPlugin } from './scanPlugin'\r\n\r\nimport { preBundlePlugin } from \"./preBundlePlugin\";\r\nimport { PRE_BUNDLE_DIR } from \"../constants\";\r\n\r\nexport async function optimize(root: string) {\r\n  // 1. Á°ÆËÆ§ÂÖ•Âè£\r\n  const entry = path.resolve(root, 'src/main.tsx')\r\n\r\n  // 2. ‰ªéÂÖ•Âè£Â§ÑÊâ´Êèè‰æùËµñ\r\n  const deps = new Set<string>()\r\n\r\n  await build({\r\n    entryPoints: [entry],\r\n    bundle: true,\r\n    write: false,\r\n    plugins: [ scanPlugin(deps) ]\r\n  })\r\n\r\n  console.log(\r\n    `${green(\"ÈúÄË¶ÅÈ¢ÑÊûÑÂª∫ÁöÑ‰æùËµñ\")}:\\n${[...deps]\r\n    .map(green)\r\n    .map((item) => `  ${item}`)\r\n    .join(\"\\n\")}`\r\n  )\r\n\r\n  // 3. È¢ÑÊûÑÂª∫‰æùËµñ\r\n  await build({\r\n    entryPoints: [...deps],\r\n    write: true,\r\n    bundle: true,\r\n    format: \"esm\",\r\n    splitting: true,\r\n    outdir: path.resolve(root, PRE_BUNDLE_DIR),\r\n    plugins: [preBundlePlugin(deps)]\r\n  })\r\n}","const path = require('path')\r\n\r\nexport const EXTERNAL_TYPES = [\r\n  \"css\",\r\n  \"less\",\r\n  \"sass\",\r\n  \"scss\",\r\n  \"styl\",\r\n  \"stylus\",\r\n  \"pcss\",\r\n  \"postcss\",\r\n  \"vue\",\r\n  \"svelte\",\r\n  \"marko\",\r\n  \"astro\",\r\n  \"png\",\r\n  \"jpe?g\",\r\n  \"gif\",\r\n  \"svg\",\r\n  \"ico\",\r\n  \"webp\",\r\n  \"avif\",\r\n]\r\n\r\nexport const BARE_IMPORT_RE = /^[\\w@][^:]/\r\n\r\n// È¢ÑÊûÑÂª∫‰∫ßÁâ©ÈªòËÆ§Â≠òÊîæÂú® node_modules ‰∏≠ÁöÑ .vite ÁõÆÂΩï‰∏≠\r\nexport const PRE_BUNDLE_DIR = path.join(\"node_modules\", \".vite\")\r\n","import { Plugin } from \"esbuild\"\r\nimport { BARE_IMPORT_RE, EXTERNAL_TYPES } from \"../constants\"\r\n\r\nexport function scanPlugin(deps: Set<string>): Plugin {\r\n  return {\r\n    name: \"esbuild:scan-deps\",\r\n    setup(build) {\r\n      // ÂøΩÁï•ÁöÑÊñá‰ª∂Á±ªÂûã\r\n      build.onResolve(\r\n        { filter: new RegExp(`\\\\.(${EXTERNAL_TYPES.join(\"|\")})$`) },\r\n        (resolveInfo) => {\r\n          return {\r\n            path: resolveInfo.path,\r\n            // Êâì‰∏ä external Ê†áËÆ∞\r\n            external: true,\r\n          }\r\n        }\r\n      )\r\n      // ËÆ∞ÂΩï‰æùËµñ\r\n      build.onResolve(\r\n        {\r\n          filter: BARE_IMPORT_RE,\r\n        },\r\n        (resolveInfo) => {\r\n          const { path: id } = resolveInfo\r\n          // Êé®ÂÖ• deps ÈõÜÂêà‰∏≠\r\n          deps.add(id)\r\n          return {\r\n            path: id,\r\n            external: true,\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n}","import { Loader, Plugin } from \"esbuild\"\r\nimport { BARE_IMPORT_RE } from \"../constants\"\r\n\r\n// Áî®Êù•ÂàÜÊûê es Ê®°Âùó import/export ËØ≠Âè•ÁöÑÂ∫ì\r\nimport { init, parse } from \"es-module-lexer\"\r\nimport path from \"path\"\r\n// ‰∏Ä‰∏™ÂÆûÁé∞‰∫Ü node Ë∑ØÂæÑËß£ÊûêÁÆóÊ≥ïÁöÑÂ∫ì\r\nimport resolve from \"resolve\"\r\n// ‰∏Ä‰∏™Êõ¥Âä†Â•ΩÁî®ÁöÑÊñá‰ª∂Êìç‰ΩúÂ∫ì\r\nimport fs from \"fs-extra\"\r\n// Áî®Êù•ÂºÄÂèëÊâìÂç∞ debug Êó•ÂøóÁöÑÂ∫ì\r\nimport createDebug from \"debug\"\r\n\r\nimport{ normalizePath } from '../utils'\r\n\r\nconst debug = createDebug(\"dev\")\r\n\r\nexport function preBundlePlugin(deps: Set<string>): Plugin {\r\n  return {\r\n    name: \"esbuild:pre-bundle\",\r\n    setup(build) {\r\n      build.onResolve(\r\n        {\r\n          filter: BARE_IMPORT_RE,\r\n        },\r\n        (resolveInfo) => {\r\n          const { path: id, importer } = resolveInfo\r\n          const isEntry = !importer\r\n\r\n          // ÂëΩ‰∏≠ÈúÄË¶ÅÈ¢ÑÁºñËØëÁöÑ‰æùËµñ\r\n          if (deps.has(id)) {\r\n            // Ëã•‰∏∫ÂÖ•Âè£ÔºåÂàôÊ†áËÆ∞ dep ÁöÑ \r\n            \r\n            return isEntry\r\n              ? {\r\n                  path: id,\r\n                  namespace: \"dep\",\r\n                }\r\n              : {\r\n                  // Âõ†‰∏∫Ëµ∞Âà∞ onResolve ‰∫ÜÔºåÊâÄ‰ª•ËøôÈáåÁöÑ path Â∞±ÊòØÁªùÂØπË∑ØÂæÑ‰∫Ü\r\n                  path: resolve.sync(id, { basedir: process.cwd() }),\r\n                }\r\n          }\r\n        }\r\n      )\r\n\r\n      // ÊãøÂà∞Ê†áËÆ∞ÂêéÁöÑ‰æùËµñÔºåÊûÑÈÄ†‰ª£ÁêÜÊ®°ÂùóÔºå‰∫§Áªô esbuild ÊâìÂåÖ\r\n      build.onLoad(\r\n        {\r\n          filter: /.*/,\r\n          namespace: \"dep\",\r\n        },\r\n        async (loadInfo) => {\r\n          await init\r\n          \r\n          const id = loadInfo.path\r\n          const root = process.cwd()\r\n\r\n          const entryPath = resolve.sync(id, { basedir: root })\r\n\r\n          const code = await fs.readFile(entryPath, \"utf-8\")\r\n          const [imports, exports] = await parse(code)\r\n\r\n          let relativePath = normalizePath(path.relative(root, entryPath))\r\n          if (\r\n            !relativePath.startsWith('./') &&\r\n            !relativePath.startsWith('../') &&\r\n            relativePath !== '.'\r\n          ) {\r\n            relativePath = `./${relativePath}`\r\n          }\r\n\r\n          let proxyModule = []\r\n\r\n          // cjs\r\n          if (!imports.length && !exports.length) {\r\n            // ÊûÑÈÄ†‰ª£ÁêÜÊ®°Âùó\r\n            const res = require(entryPath)\r\n            const specifiers = Object.keys(res)\r\n            proxyModule.push(\r\n              `export { ${specifiers.join(\",\")} } from \"${relativePath}\"`,\r\n              `export default require(\"${relativePath}\")`\r\n            )\r\n          } else {\r\n            // esm Ê†ºÂºèÊØîËæÉÂ•ΩÂ§ÑÁêÜÔºåexport * ÊàñËÄÖ export default Âç≥ÂèØ\r\n            if (exports.includes(\"default\")) {\r\n              proxyModule.push(`import d from \"${relativePath}\"export default d`)\r\n            }\r\n            proxyModule.push(`export * from \"${relativePath}\"`)\r\n          }\r\n          debug(\"‰ª£ÁêÜÊ®°ÂùóÂÜÖÂÆπ: %o\", proxyModule.join(\"\\n\"))\r\n          const loader = path.extname(entryPath).slice(1)\r\n\r\n          return {\r\n            loader: loader as Loader,\r\n            contents: proxyModule.join(\"\\n\"),\r\n            resolveDir: root,\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n}","const path = require('path')\r\nconst os = require('os')\r\n\r\nexport function slash(p: string): string {\r\n  return p.replace(/\\\\/g, '/')\r\n}\r\nexport const isWindows = os.platform() === 'win32'\r\n\r\nexport function normalizePath(id: string): string {\r\n  return path.posix.normalize(isWindows ? slash(id) : id)\r\n}\r\n"],"mappings":"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","names":["green","path","build","path","path","build","path","path","green"]}